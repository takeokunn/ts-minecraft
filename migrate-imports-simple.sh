#!/bin/bash

# TypeScript Minecraft „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÔºö„Ç∑„É≥„Éó„É´„Å™„Ç§„É≥„Éù„Éº„Éà„Éë„ÇπÁßªË°å„Çπ„ÇØ„É™„Éó„Éà

echo "üîÑ Starting import path migration from @/domain to @/core..."
echo ""

total_files=0
updated_files=0
total_updates=0

# ÂçòÁ¥î„Å™ÁΩÆÊèõÈñ¢Êï∞
replace_in_file() {
    local file="$1"
    local from="$2"
    local to="$3"
    local temp_file="${file}.tmp"
    
    # ÁΩÆÊèõ„ÇíÂÆüË°å
    sed "s|from '$from'|from '$to'|g; s|from \"$from\"|from \"$to\"|g" "$file" > "$temp_file"
    
    # Â§âÊõ¥„Åå„ÅÇ„Å£„Åü„Åã„ÉÅ„Çß„ÉÉ„ÇØ
    if ! cmp -s "$file" "$temp_file"; then
        mv "$temp_file" "$file"
        echo "    ‚úì $from ‚Üí $to"
        return 0
    else
        rm "$temp_file"
        return 1
    fi
}

# „É°„Ç§„É≥„ÅÆÁßªË°åÂá¶ÁêÜ
echo "üìÅ Processing TypeScript files..."
while IFS= read -r -d '' file; do
    ((total_files++))
    
    # „Éï„Ç°„Ç§„É´„Å´@/domain„ÅÆ„Ç§„É≥„Éù„Éº„Éà„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
    if grep -q "@/domain/" "$file" 2>/dev/null; then
        echo ""
        echo "üìù Processing: $(basename "$file")"
        file_updated=false
        
        # ÂêÑÁßªË°å„Éë„Çø„Éº„É≥„ÇíÈÅ©Áî®
        if replace_in_file "$file" "@/domain/entity" "@/core/entities/entity"; then
            file_updated=true
            ((total_updates++))
        fi
        
        if replace_in_file "$file" "@/domain/block" "@/core/entities/block"; then
            file_updated=true
            ((total_updates++))
        fi
        
        if replace_in_file "$file" "@/domain/block-definitions" "@/core/entities/block-definitions"; then
            file_updated=true
            ((total_updates++))
        fi
        
        if replace_in_file "$file" "@/domain/block-types" "@/core/values/block-type"; then
            file_updated=true
            ((total_updates++))
        fi
        
        if replace_in_file "$file" "@/domain/values/block-type" "@/core/values/block-type"; then
            file_updated=true
            ((total_updates++))
        fi
        
        if replace_in_file "$file" "@/domain/values/coordinates" "@/core/values/coordinates"; then
            file_updated=true
            ((total_updates++))
        fi
        
        if replace_in_file "$file" "@/domain/values/entity-id" "@/core/values/entity-id"; then
            file_updated=true
            ((total_updates++))
        fi
        
        if replace_in_file "$file" "@/domain/common" "@/core/common"; then
            file_updated=true
            ((total_updates++))
        fi
        
        if replace_in_file "$file" "@/domain/types" "@/core/types"; then
            file_updated=true
            ((total_updates++))
        fi
        
        if [ "$file_updated" = true ]; then
            ((updated_files++))
        fi
    fi
done < <(find src -type f \( -name "*.ts" -o -name "*.tsx" \) -print0)

echo ""
echo "‚úÖ Migration completed!"
echo ""
echo "üìä Migration Summary:"
echo "  - Total files scanned: $total_files"
echo "  - Files updated: $updated_files"
echo "  - Total import statements updated: $total_updates"
echo ""

# Ê§úË®º
echo "üîç Verifying migration..."
remaining_lines=$(grep -r "@/domain/" src --include="*.ts" --include="*.tsx" 2>/dev/null | wc -l | tr -d ' ')

if [ "$remaining_lines" -eq 0 ]; then
    echo "‚úÖ All @/domain imports successfully migrated!"
else
    echo "‚ö†Ô∏è  Found $remaining_lines remaining old imports. Checking specific patterns..."
    
    # ÊÆã„Å£„Å¶„ÅÑ„Çã„Éë„Çø„Éº„É≥„ÇíË©≥Á¥∞Á¢∫Ë™ç
    echo ""
    echo "üìã Remaining @/domain imports by pattern:"
    grep -r "@/domain/" src --include="*.ts" --include="*.tsx" 2>/dev/null | head -10 | while read -r line; do
        echo "    $line"
    done
    
    if [ "$remaining_lines" -gt 10 ]; then
        echo "    ... and $((remaining_lines - 10)) more"
    fi
fi

echo ""
echo "üéâ Migration process completed!"